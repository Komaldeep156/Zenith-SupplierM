@model Zenith.BLL.DTO.VendorCreateModel;
@{
    ViewData["Title"] = "Add new vendor";
}

<style>
    .title {
        color: #00387f;
        font-weight: 600;
        text-align: center;
        margin-bottom: 40px;
    }

        .title span {
            color: #C72C1C;
        }
</style>

<div class="container-fluid">
    <div class="row">
        <!-- sidebar -->
        <div class="col-md-3 col-lg-2 px-0 shadow-sm sidebar">
            <partial name="_Sidebar" />
        </div>

        <div class="col-md-9 col-lg-10 ml-md-auto mt-3">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1 class="py-2 mb-0 title"><span>Add new </span> vendor</h1>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <!--second-->
                        <h5 class="border-bottom mb-3 pb-3">Created By</h5>
                        <div class="mb-3">
                            <label>Request Type <span class="text-danger fw-bold">*</span></label>
                            <select class="form-select my-2 requestBy">
                                @if (Model.RequestType != null)
                                {
                                    <option value="" selected>Select</option>
                                    foreach (var c in Model.RequestType)
                                    {
                                        <option value="@c.Id">@c.Value</option>
                                    }
                                }
                            </select>


                            <div class="form-group mb-2 ">
                                <label>Created By </label>
                                <input type="text" class="form-control mt-2" id="CreatedBy" value="@Model.CreatedBy.FullName" disabled />
                            </div>

                            <div class="form-group mb-2 ">
                                <label>Position </label>
                                <input type="text" class="form-control mt-2" id="Position" value="@Model.Position" disabled />
                            </div>

                             <div class="form-group mb-2 ">
                                <label>Departmnet </label>
                                <input type="text" class="form-control mt-2" id="Departmnet" value="@Model.Department" disabled />
                            </div>
                            
                            <div class="form-group mb-2 ">
                                <label>Email </label>
                                <input type="text" class="form-control mt-2" id="Email" value="@Model.Email" disabled />
                            </div>
                        </div

                         <!--second-B-->
                        <h5 class="border-bottom mb-3 pb-3">Requested By</h5>
                        <div class="mb-3">

                            <div class="form-group mb-2">
                                <label for="sameAsCreator">Same as Creator</label>
                                <input type="checkbox" class="form-check-input mt-2" id="sameAsCreator" />
                            </div>
                            
                            <label>Request By <span class="text-danger fw-bold">*</span></label>
                            <select class="form-select my-2 requestBy" id="RERequestBy" >
                                @if (Model.UsersList != null)
                                {
                                    <option value="" selected>Select</option>
                                    foreach (var c in Model.UsersList)
                                    {
                                        <option value="@c.Id">@c.Email</option>
                                    }
                                }
                            </select>
                            <span class="text-danger" id="requestByErrorMsg" style="display:none">This field is required</span>

                            <div class="form-group mb-2 ">
                                <label>Position <span class="text-danger fw-bold">*</span> </label>
                                <input type="text" class="form-control mt-2" id="REPosition" value="@Model.Position"/>
                            </div>

                             <div class="form-group mb-2 ">
                                <label>Departmnet <span class="text-danger fw-bold">*</span></label>
                                <input type="text" class="form-control mt-2" id="REDepart" value="@Model.Department"/>
                            </div>
                            
                            <div class="form-group mb-2 ">
                                <label>Email <span class="text-danger fw-bold">*</span></label>
                                <input type="text" class="form-control mt-2" id="REEmail" value="@Model.Email"/>
                            </div>

                            <div>Priority <span class="text-danger fw-bold">*</span></div>
                            <select class="form-select my-2" id="priorityContainer">
                            </select>
                            <span class="text-danger" id="priorityErrorMsg" style="display:none">This field is required</span>

                            <div class="form-group mb-2 ">
                                <label>Required By <span class="text-danger fw-bold">*</span></label>
                                <input type="date" class="form-control mt-2" id="requiredBy" />
                            </div>
                            <span class="text-danger" id="RequiredByErrorMsg" style="display:none">This field is required</span>

                            
                        </div>
                        <!--Thired-->
                        <h5 class="border-bottom mb-3 pb-3">Supplier Info</h5>
                        <div class="mb-3">
                            <div class="form-group mb-2 ">
                                <label>Business Registration Number</label>
                                <input type="text" class="form-control mt-2" id="businessRNo" />
                            </div>
                            <div class="form-group mb-2 ">
                                <label>Supplier Name <span class="text-danger fw-bold">*</span></label>
                                <input type="text" class="form-control mt-2" placeholder="Supplier Name" id="supplierName" />
                                <span class="text-danger" id="supplierNameErrorMsg" style="display:none">This field is required</span>
                            </div>
                            <label>Supplier Type <span class="text-danger fw-bold">*</span></label>
                            <select class="form-select my-2" id="supplierTypeContainer">
                            </select>
                            <span class="text-danger" id="supplierTypeErrorMsg" style="display:none">This field is required</span>

                            <div class="form-group mb-2 ">
                                <label>Registered Country <span class="text-danger fw-bold">*</span></label>
                                <select class="form-select my-2" id="SupplierCountryContainer">
                                </select>
                                <span class="text-danger" id="supplierCountryErrorMsg" style="display:none">This field is required</span>
                            </div>

                            <div class="form-group mb-2 ">
                                <label>Supplier Scope</label>
                                <input type="text" class="form-control mt-2" placeholder="Supplier Scope" id="scope" />
                            </div>
                        </div>

                    </div>
                    <div class="col-md-6">
                        <!--Thired-->
                        <h5 class="border-bottom mb-3 pb-3">Supplier Info - Contact</h5>
                        <div class="mb-3">
                            <div class="form-group mb-2 ">
                                <label>Contact Name</label>
                                <input type="text" class="form-control mt-2" placeholder="Contact Name" id="contactName" />
                            </div>
                            <div class="form-group mb-2 ">
                                <label>Phone Number</label>
                                <input type="number" class="form-control mt-2" placeholder="1234567890" id="contactPhone" />
                            </div>
                            <div class="form-group mb-2 ">
                                <label>Email</label>
                                <input type="email" onblur="isValidEmail(this.value,true,'invalidErrorMessage')" class="form-control mt-2" placeholder="test@example.com" id="contactEmail" />
                                <span class="text-danger" id="invalidErrorMessage" style="display:none">Please enter valid email</span>
                            </div>
                            <label>Country</label>
                            <select class="form-select my-2" id="CountryContainer">
                            </select>
                            <div class="form-group mb-2 ">
                                <label>Website</label>
                                <input type="text" class="form-control mt-2" placeholder="www.example.com" id="website" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" onclick="addVendor(false)">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/common.js"></script>
<script>


    // getUsersList();
    getPriorityList();
    getSuppliertypeList();
    getCountryList();

      // Clear values on page load
    $('#RERequestBy').val('');
    $('#REPosition').val('');
    $('#REDepart').val('');
    $('#REEmail').val('');

      $('#sameAsCreator').change(function () {
            if ($(this).is(':checked')) {

                debugger;
                //var createdByValue = $('#CreatedBy').val();
                var createdByValue ='@Model.CreatedBy.Email';

                  // Find the option in the dropdown and select it
                var option = $('#RERequestBy').find('option[value="' + createdByValue + '"]');

                if (option.length > 0) {
                    // Set the selected attribute of the matched option
                    option.prop('selected', true);
                } else {
                    // If the value doesn't exist, show an alert or log the error
                    console.log('The value "' + createdByValue + '" is not available in the dropdown.');
                    //alert('The value "' + createdByValue + '" is not available in the dropdown.');
                }

                // Copy values when checkbox is checked
               // $('#RERequestBy').val('@Model.CreatedBy'); 
               // $('#RERequestBy').val($('#CreatedBy').val());
                $('#REPosition').val('@Model.Position');
                $('#REDepart').val('@Model.Department');
                $('#REEmail').val('@Model.Email');

                //$('#RERequestBy').prop('disabled', true);  
                $('#REPosition').prop('disabled', true);   
                $('#REDepart').prop('disabled', true);     
                $('#REEmail').prop('disabled', true); 
            } else {
                // Clear values when checkbox is unchecked
                $('#RERequestBy').val('');
                $('#REPosition').val('');
                $('#REDepart').val('');
                $('#REEmail').val('');

                //$('#RERequestBy').prop('disabled', false);
                $('#REPosition').prop('disabled', false);
                $('#REDepart').prop('disabled', false);
                $('#REEmail').prop('disabled', false);
            }
        });

    function getUsersList() {
        let requestBy = $('.requestBy');
        $.ajax({
            url: '/User/GetUsers',
            type: 'GET',
            dataType: "json",
            success: function (res) {
                let data = `
                          <option value='' selected>Select</option>
                          ${res.map(user => `<option value='${user.id}'>${user.userName}</option>`)}
                    `;
                requestBy.append(data);
            }
        });
    }

    function getPriorityList() {
        let priorityContainer = $("#priorityContainer");
        $.ajax({
            url: '/DropdownList/GetDropdownByName',
            type: 'GET',
            data: { name: "PRIORITY" },
            success: function (res) {
                let data = `
                      <option value='' selected>Select</option>
                      ${res.values.map(option => `<option value='${option.id}'>${option.value}</option>`)}
                `;
                priorityContainer.append(data);
            }
        });
    }

    function getSuppliertypeList() {
        let supplierTypeContainer = $("#supplierTypeContainer");
        $.ajax({
            url: '/DropdownList/GetDropdownByName',
            type: 'GET',
            data: { name: "SUPPLIERTYPE" },
            success: function (res) {
                let data = `
                          <option value='' selected>Select</option>
                          ${res.values.map(option => `<option value='${option.id}'>${option.value}</option>`)}
                    `;
                supplierTypeContainer.append(data);
            }
        });
    }

    function getCountryList() {
        let CountryContainer = $("#CountryContainer");
        let SupplierCountryContainer = $("#SupplierCountryContainer");
        $.ajax({
            url: '/DropdownList/GetDropdownByName',
            type: 'GET',
            data: { name: "COUNTRY" },
            success: function (res) {
                let data = `
                              <option value='' selected>Select</option>
                              ${res.values.map(option => `<option value='${option.id}'>${option.value}</option>`)}
                        `;
                CountryContainer.append(data);
                SupplierCountryContainer.append(data);
            }
        });
    }

    function addVendor(allowDuplicateVendor) {
        $("#requestByErrorMsg").hide();
        $("#priorityErrorMsg").hide();
        $("#RequiredByErrorMsg").hide();
        $("#supplierNameErrorMsg").hide();
        $("#supplierTypeErrorMsg").hide();
        $("#supplierCountryErrorMsg").hide();

        let requestedBy = $('.requestBy').val();
        let priorityId = $('#priorityContainer').val();
        let requiredBy = $('#requiredBy').val();
        let businessRNo = $('#businessRNo').val();
        let supplierName = $('#supplierName').val();
        let supplierTypeId = $("#supplierTypeContainer").val();
        let scope = $("#scope").val()
        let contactName = $("#contactName").val()
        let contactPhone = $('#contactPhone').val();
        let contactEmail = $("#contactEmail").val()
        let website = $('#website').val();
        let contactCountryId = $("#CountryContainer").val();
        let supplierCountryId = $("#SupplierCountryContainer").val();

        if (requestedBy == null || requestedBy == "") {
            $("#requestByErrorMsg").show();
        }
        if (priorityId == null || priorityId == "") {
            $("#priorityErrorMsg").show();
        }
        if (requiredBy == null || requiredBy == "") {
            $("#RequiredByErrorMsg").show();
        }
        if (supplierName == null || supplierName == "") {
            $("#supplierNameErrorMsg").show();
        }
        if (supplierTypeId == null || supplierTypeId == "") {
            $("#supplierTypeErrorMsg").show();
        }
        if (supplierCountryId == null || supplierCountryId == "") {
            $("#supplierCountryErrorMsg").show();
        }

        if (requestedBy != '' && priorityId != '' && requiredBy != '' && supplierName != '' && supplierTypeId != '' && supplierCountryId) {
            $.ajax({
                url: '/Vendors/AddVendor',
                type: 'POST',
                data: {
                    requestedBy: requestedBy,
                    priorityId: priorityId,
                    requiredBy: requiredBy,
                    BusinessRegistrationNo : businessRNo,
                    supplierName: supplierName,
                    supplierTypeId: supplierTypeId,
                    scope: scope,
                    contactName: contactName,
                    contactPhone: contactPhone,
                    contactEmail: contactEmail,
                    contactCountryId: contactCountryId,
                    supplierCountryId: supplierCountryId,
                    allowDuplicateVendor: allowDuplicateVendor,
                },
                success: function (resp) {
                    if (resp == 0) {
                        showconfirmationPopUp()
                    }
                    else if(resp == 2)
                    {
                        Swal.fire({
                            icon: "error",
                            title: "Duplicate Business Registration Number found.",
                            text: "Please enter correct number",
                            showConfirmButton: true,
                            confirmButtonColor: "#3085d6",
                            timer: 5000,
                        });
                    }
                    else if(resp == 3)
                    {
                        Swal.fire({
                            icon : "error",
                            title : "Failed",
                            text : "Please try after some time.",
                            showConfirmButton : true,
                            timer : 5000
                        });
                    }
                    else{
                        window.location.reload();
                    }
                }
            });
        }
    }

    function showconfirmationPopUp() {
        Swal.fire({
            title: "Supplier already exists",
            text: "Do you still want to continue?",
            icon: "info",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            confirmButtonText: "Yes",
            cancelButtonColor: "#d33",
        }).then((result) => {
            if (result.dismiss === Swal.DismissReason.cancel) {
                console.log("User canceled supplier creation");
                window.location.reload();
            } else {
                addVendor(true);
            }
        });
    }


</script>