@model IEnumerable<Zenith.BLL.DTO.SecurityGroupsDTO>
@{
    ViewData["Title"] = "Security Group";
}

<style>
    .title {
        color: #00387f;
        font-weight: 600;
        text-align: center;
        margin-bottom: 40px;
    }

        .title span {
            color: #C72C1C;
        }

    .disabled-row {
        background-color: #f2f2f2; /* Light gray to indicate it's disabled */
        color: #ccc; /* Gray out the text */
        pointer-events: none; /* Prevent clicks, hover, etc., on the entire row */
    }

</style>


<div class="container-fluid">
    <div class="row">
        <!-- sidebar -->
        <div class="col-md-3 col-lg-2 px-0 shadow-sm sidebar">
            <partial name="_Sidebar" />
        </div>

        <div class="col-md-9 col-lg-10 ml-md-auto mt-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center">
                    <h1 class="py-2 mb-0 title"><span> Security Group</span></h1>
                    <div>
                        <a class="btn btn-outline-info text-dark" asp-action="AddSecurityGroup" asp-controller="SecurityGroup"><i class="fas fa-plus"></i> Add</a>
                        <button class="btn btn-outline-info text-dark" onclick="UpdateActiveStatusOfSelectedRecords(true)"><i class="fas fa-folder-open"></i> Active</button>
                        <button class="btn btn-outline-info text-dark" onclick="UpdateActiveStatusOfSelectedRecords(false)"><i class="fas fa-folder-minus"></i> InActive</button>
                        <a class="btn btn-outline-info text-dark" onclick="CopySelectedSecurityGroup()"><i class="fas fa-copy"></i>Copy</a>
                        <button class="btn btn-outline-info text-dark" onclick="deleteSelectedSecurityGroups()"><i class="fas fa-remove"></i> Delete Security Group</button>
                    </div>
                </div>

                <div class="row mt-4">
                    <div id="divWorkBenchSummaryPartialView" class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div style="width: 50%; margin: auto; padding-top: 20px;">
                            <canvas id="approvalChart"></canvas>
                        </div>
                    </div>
                </div>

                <ul class="nav nav-tabs mt-4" id="myTab" role="tablist">
                </ul>

                <div class="tab-content mt-4" id="myTabContent">

                    <!-- First !-->

                    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                        <div class="d-flex align-items-center">
                            <!-- Filter Options and Search Button -->
                            <div class="d-flex align-items-center">
                                <select class="form-select me-2" style="width: 170px;" id="fieldNameId">
                                    <option selected>Select</option>
                                    <option value="NAME">Security Group Name</option>
                                    <option value="SECURITYGROUPCODE">Security Group Code</option>
                                </select>

                                <input type="search" class="form-control me-2" id="searchInputId" placeholder="Search here" style="width: 200px;" />

                                <input type="button" class="btn btn-primary" onclick="searchSecurityGroup()" value="Search" />
                            </div>

                        </div>

                        <div class="row mt-3">
                            <div class="col-md-12">
                                <div id="divSecurityGroupListPartialView" class="overflow-auto">
                                    @Html.Partial("_SecurityGroupList", Model)
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- second !-->
                    <div id="profile" class="tab-pane fade" role="tabpanel" aria-labelledby="profile-tab">
                        <div class="d-flex align-items-center">
                            <!-- Date Inputs and Search Button -->
                            <div class="d-flex align-items-center">
                                <input type="date" id="FilterFromDate" class="form-control me-2" placeholder="From Date">
                                <input type="date" id="FilterToDate" class="form-control me-2" placeholder="To Date">
                                <input type="button" class="btn btn-primary" onclick="SearchFilterVacationRequests()" value="Search" />
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-md-12">

                                <div id="divVacationRequestsApprovalList" class="overflow-auto">
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Third !-->
                    <div id="delegation" class="tab-pane fade" role="tabpanel" aria-labelledby="delegation-tab">
                        <div class="row mt-3">
                            <div class="col-md-12">

                                <div id="divDelegationRequestsList" class="overflow-auto">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

    function selectAllChkbxChangeEvent(thisEvent) {
        $(".actionCheckboxes").each(function () {
            $(this).prop('checked', $(thisEvent).is(":checked"));
        });
    }

    function searchSecurityGroup() {
        var fieldName = $("#fieldNameId").val();
        var searchText = $("#searchInputId").val();
        $.ajax({
            url: '/SecurityGroup/SearchSecurityGroupList',
            type: 'GET',
            data: { fieldName: fieldName, searchText: searchText },
            success: function (result) {
                console.log(result);
                $("#divSecurityGroupListPartialView").html(result);
            }
        });
    }

    function CopySelectedSecurityGroup()
    {
         let selectedGuids = [];
        $("#sGroupsCheckBox:checked").each(function () {
            selectedGuids.push($(this).attr('UserId'));
        });

        if(selectedGuids.length === 0){
            Swal.fire({
                icon : "warning",
                text : "Please select a record to copy.",
                showConfirmButton : true,
            });
            return;
        }

        $.ajax({
                type: "POST",
                url: "/SecurityGroup/CopySecurityGroup",
                data: JSON.stringify(selectedGuids),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                        if (response.isSuccess) {
                            Swal.fire({
                                icon: "success",
                                text: "Selected security group Copy successfully!",
                                showConfirmButton: false,
                                timer: 1500,
                            }).then(() => {
                               window.location.reload();
                            });
                        } else if (response.partiallySuccess) {
                            Swal.fire({
                                icon: "info",
                                title: "Deletion Failed",
                            html: `Selected security group could not be copied. Please try again for the following group: ${response.notCopySecurityGroupNames.map(w => `${w}`).join(', ')}`,
                                showConfirmButton: true,
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "Deletion Failed",
                                text: `The security group could not be copied. Please try again for the following group:${response.notCopySecurityGroupNames.map(w => `${w}`).join(', ')}`,
                                showConfirmButton: true,
                                });
                            }
                        },
                error: function () {
                        Swal.fire({
                             icon: "error",
                             text: "An error occurred. Please try again.",
                             showConfirmButton: true,
                        });
                }
        });
    }

    function deleteSelectedSecurityGroups()
    {
        let selectedGuids = [];
        $("#sGroupsCheckBox:checked").each(function () {
            selectedGuids.push($(this).attr('UserId'));
        });

        if(selectedGuids.length === 0){
            Swal.fire({
                icon : "warning",
                text : "Please select a record to delete.",
                showConfirmButton : true,
            });
            return;
        }

        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you really want to delete the selected security group.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            cancelButtonText: 'No, cancel',
        }).then((result) => {
            if (result.value === true) {
                $.ajax({
                    type: "POST",
                    url: "/SecurityGroup/DeleteSecurityGroup",
                    data: JSON.stringify(selectedGuids),
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                            if (response.isSuccess) {
                                Swal.fire({
                                    icon: "success",
                                    text: "Selected security group deleted successfully!",
                                    showConfirmButton: false,
                                    timer: 1500,
                                }).then(() => {
                                   window.location.reload();
                                });
                            } else if (response.partiallySuccess) {
                                Swal.fire({
                                    icon: "info",
                                    title: "Deletion Failed",
                                html: `Selected security group could not be deleted, Please deactivate them :${response.notDeletedSecurityGroupNames.map(w => `${w}`).join(', ')}`,
                                    showConfirmButton: true,
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "Deletion Failed",
                                    text: `The following security group cannot be deleted. Please deactivate them:${response.notDeletedSecurityGroupNames.map(w => `${w}`).join(', ')}`,
                                    showConfirmButton: true,
                                    });
                                }
                            },
                    error: function () {
                            Swal.fire({
                                 icon: "error",
                                 text: "An error occurred. Please try again.",
                                 showConfirmButton: true,
                            });
                    }
                });
            }
        });

    }

    function UpdateActiveStatusOfSelectedRecords(isActive) {
        let selectedGuids = [];
        $("#sGroupsCheckBox:checked").each(function () {
            selectedGuids.push($(this).attr('UserId'));
        });

        if (selectedGuids.length === 0) {
            Swal.fire({
                icon: "warning",
                text: "Please select a record to update status.",
                showConfirmButton: true,
            });
            return;
        }

        if (!isActive) {
            debugger;
            Swal.fire({
                icon: "warning",
                title: "Are you sure?",
                text: "Deactivating selected security groups may cause restricted access. Do you want to proceed?",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, deactivate",
                cancelButtonText: "Cancel",
            }).then((result) => {
                if (result.isConfirmed == Swal.isConfirmed) {
                    callUpdateStatusAjax(selectedGuids, isActive);
                }
            });
        } else {
            callUpdateStatusAjax(selectedGuids, isActive);
        }
    }

    function callUpdateStatusAjax(selectedGuids, isActive) {
        $.ajax({
            type: "POST",
            url: "/SecurityGroup/UpdateSecurityGroupStatus",
            data: { selectedSecurityGroupGuids: selectedGuids, isActive: isActive },
            success: function (response) {
                if (response.isSuccess) {
                    Swal.fire({
                        icon: "success",
                        text: "Selected security group status updated successfully!",
                        showConfirmButton: false,
                        timer: 1500,
                    }).then(() => {
                        window.location.reload();
                    });
                } else if (response.partiallySuccess) {
                    Swal.fire({
                        icon: "info",
                        title: "Status Update Failed",
                        html: `Some security groups could not be updated. because a user is linked to this security group: ${response.notUpdatedSecurityGroupNames.map(w => `${w}`).join(', ')}`,
                        showConfirmButton: true,
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Status Update Failed",
                        text: `The following security groups cannot be updated because a user is linked to this security group: ${response.notUpdatedSecurityGroupNames.map(w => `${w}`).join(', ')}`,
                        showConfirmButton: true,
                    });
                }
            },
            error: function () {
                Swal.fire({
                    icon: "error",
                    text: "An error occurred. Please try again.",
                    showConfirmButton: true,
                });
            }
        });
    }


</script>
