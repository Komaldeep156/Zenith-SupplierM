@model IEnumerable<Zenith.BLL.DTO.GetUserListDTO>
@{
    ViewData["Title"] = "User Management";
}

<style>
    .title {
        color: #00387f;
        font-weight: 600;
        text-align: center;
        margin-bottom: 40px;
    }

        .title span {
            color: #C72C1C;
        }

    .btn-delete {
        background-color: #e74c3c; /* Red background */
        color: #fff; /* White text */
        font-weight: bold;
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        transition: background-color 0.3s ease, transform 0.2s ease;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* Subtle shadow */
    }

        .btn-delete:hover {
            background-color: #c0392b; /* Darker red on hover */
            transform: scale(1.05); /* Slight scale up on hover */
            box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.3); /* More shadow on hover */
        }

        .btn-delete:active {
            background-color: #a93226; /* Even darker red on click */
            transform: scale(0.98); /* Scale down on click */
        }
</style>

<div class="container-fluid">
    <div class="row">
        <!-- sidebar -->
        <div class="col-md-3 col-lg-2 px-0 shadow-sm sidebar">
            <partial name="_Sidebar" />
        </div>

        <div class="col-md-9 col-lg-10 ml-md-auto mt-3">
            <div class="container-fluid">
                <div class="d-flex justify-content-between align-items-center">
                    <h1 class="py-2 mb-0 title">User <span> Management</span></h1>
                    <div>
                        <button class="btn btn-outline-info text-dark" onclick="addUserMethod()"><i class="fas fa-plus"></i>Add User</button>
                        <button class="btn btn-delete" onclick="deleteSelectedUsers()">Delete User</button>
                    </div>
                </div>
                <div class="d-flex justify-content-end">
                    <input type="search" class="form-control" placeholder="Search here" style="width:250px;" />
                </div>
                <div class="mt-3" style="overflow:auto;height:590px">
                    <table class="table table-striped table-bordered" style="width:125%">
                        <thead class="bg-primary text-white text-center text-nowrap">
                            <tr>
                                <th><input type="checkbox" onchange="selectAllChkbxChangeEvent(this)" /></th>
                                <th><b>User Code</b></th>
                                <th><b>Full Name</b></th>
                                <th><b>Email</b></th>
                                <th><b>Role</b></th>
                                <th><b>Reporting manager</b></th>
                                <th><b>Branch</b></th>
                                <th><b>Department</b></th>
                                <th><b>Country</b></th>
                                <th><b>Mobile Number</b></th>
                                <th><b>Active Status</b></th>
                                <th><b>Vocation Mode On</b></th>
                                <th><b>Action</b></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int index = 1;
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td class="text-right">
                                            <input type="checkbox" UserId="@user.Id" class="actionCheckboxes" />
                                        </td>
                                        <td class="text-center">
                                            <a title="View" target="_blank" class="nav-link" asp-controller="User" asp-action="UserViewTemplate" asp-route-UserId="@user.Id">
                                                @user.UserCode
                                            </a>
                                        </td>
                                        <td class="text-center">
                                            <a title="View" target="_blank" class="nav-link" asp-controller="User" asp-action="UserViewTemplate" asp-route-UserId="@user.Id">
                                                @user.FullName
                                            </a>
                                        </td>
                                        <td class="text-center">
                                            <a title="View" target="_blank" class="nav-link" asp-controller="User" asp-action="UserViewTemplate" asp-route-UserId="@user.Id">
                                                @user.Email
                                            </a>
                                        </td>
                                        <td class="text-center">
                                                @user.RoleName
                                        </td>
                                        <td class="text-center">
                                            @if (@user.ReportingManager != null)
                                            {
                                                @user.ReportingManager.FullName
                                            }
                                        </td>
                                        <td class="text-center">@user.Branch?.Value</td>
                                        <td class="text-center">@user.DropdownValues_Department?.Value</td>
                                        <td class="text-center">@user.Country?.Value</td>
                                        <td class="text-center">@user.PhoneNumber</td>
                                        <td class="text-center">
                                            @if (user.IsActive)
                                            {
                                                <input type="checkbox" disabled checked onchange="changeActive(event, '@user.Id')" />
                                            }
                                            else
                                            {
                                                <input type="checkbox" disabled onchange="changeActive(event, '@user.Id')" />
                                            }
                                        </td>
                                        <td class="text-center">@(user.IsVocationModeOn ? "Yes" : "No")</td>
                                        <td class="text-center">
                                            <div class="dropdown me-1">
                                                <span data-bs-toggle="dropdown" aria-expanded="false" data-bs-offset="10,20">
                                                    <i class="fas fa-ellipsis-v"></i>
                                                </span>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <a title="View" target="_blank" class="dropdown-item pe-auto" asp-controller="User" asp-action="UserViewTemplate" asp-route-UserId="@user.Id">
                                                            <i class="fas fa-eye text-primary"></i> View
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                    index++;
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@* Modal *@

<script src="~/lib/jquery/common.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    getDepartmentList();
    getRols();
    getAllBranch();
    getCountryList();
    // getReportingMangers()

    function getDepartmentList() {
        $.ajax({
            url: '/DropdownList/GetDropdownByName',
            type: 'GET',
            data: { name: "DEPARTMENTS" },
            success: function (res) {
                let data = `
                              <option value=''>Select</option>
                              ${res.values.map(option => `<option value='${option.id}'>${option.value}</option>`)}
                        `;
                $(".departmentContainer").append(data);
            }
        });
    }

    function getAllBranch() {
        $.ajax({
            url: '/DropdownList/GetDropdownByName',
            type: 'GET',
            data: { name: "BRANCH" },
            success: function (res) {
                let data = `
                                  <option value=''>Select</option>
                                  ${res.values.map(option => `<option value='${option.id}'>${option.value}</option>`)}
                            `;
                $(".branchContainer").append(data);
            }
        });
    }

    function getRols() {
        $.ajax({
            url: '/AppRoles/GetRoles',
            type: 'GET',
            dataType: "json",
            success: function (res) {
                let data = `
                                   <option value=''>Select</option>
                                   ${res.map(option => `<option value='${option.id}'>${option.name}</option>`)}
                                `;
                $('.roleSelect').append(data);
            }
        });
    }

    function getReportingMangers() {
        $.ajax({
            url: '/User/GetReportingManagers',
            type: 'GET',
            dataType: "json",
            success: function (res) {
                let data = `
                                    <option value=''>Select</option>
                                    ${res.map(option => `<option value='${option.id}'>${option.email}</option>`)}
                               `;
                $(".reportingManagerContainer").append(data);
            }
        });
    }

    function getCountryList() {
        let SupplierCountryContainer = $("#SupplierCountryContainer");
        $.ajax({
            url: '/DropdownList/GetDropdownByName',
            type: 'GET',
            data: { name: "COUNTRY" },
            success: function (res) {
                let data = `
                                      <option value='' selected>Select</option>
                                      ${res.values.map(option => `<option value='${option.id}'>${option.value}</option>`)}
                                `;
                $(".CountryContainer").append(data);
            }
        });
    }

    function addUserMethod() {
        window.location.href = '@Url.Action("UserViewTemplate", "User")';
    }

    function changeActive(event, userId) {
        const isCheck = event.target.checked;
        updateUser(isCheck, userId);
    }

    function updateUser(isCheck, userId) {
        $.ajax({
            url: '/User/UpdateUserActiveInactive',
            type: 'POST',
            data: {
                UserId: userId,
                isActive: isCheck
            },
            success: function (response) {

                let message = "";
                let icon = "";
                let title = "";
                let showMessage = false;
                switch (action) {
                    case -1:
                        message = "Something went wrong";
                        icon = "error";
                        showMessage = true;
                        break;

                    case 1:
                        message = "Other users are reporting to this user you are trying to delete.";
                        icon = "warning";
                        showMessage = true;
                        break;

                    case 2:
                        message = "Updated successfully!";
                        icon = "success";
                        showMessage = true;
                        break;

                    default:
                        // Code to execute if action doesn't match any case
                        break;
                }
                if (showMessage) {
                    Swal.fire({
                        icon: icon,        // Icon for success message
                        text: message,  // Additional text
                        showConfirmButton: true, // Optional: shows a confirm button to close the message
                        timer: 5000,
                    });
                }

            }
        });
    }

    function deleteUser(userId) {
        var isConfirmed = confirm("Are you sure you want to delete this user?");

        if (isConfirmed) {
            $.ajax({
                url: '/User/DeleteById',
                type: 'GET',
                data: {
                    UserId: userId
                },
                success: function (response) {

                }
            });
        }
    }

    function selectAllChkbxChangeEvent(thisEvent) {
        $(".actionCheckboxes").each(function () {
            $(this).prop('checked', $(thisEvent).is(":checked"));
        });
    }

    function deleteSelectedUsers() {

        let selectedGuids = [];

        // Loop through checked checkboxes with class 'actionCheckboxes'
        $(".actionCheckboxes:checked").each(function () {
            // Push the checkbox value (assumed to be a GUID string) to the arrays
            selectedGuids.push($(this).attr('UserId'));
        });

        $.ajax({
            type: "POST",
            url: "/User/deleteUsers", // Change to your actual controller/action method
            data: JSON.stringify(selectedGuids),     // Convert array to JSON format
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                if (response.errorMessage) {
                    Swal.fire({
                        icon: "error",
                        text: response.ErrorMessage,
                        showConfirmButton: true,
                        timer: 10000,
                    });
                } else if (response.canNotDeleteUsers && response.canNotDeleteUsers.length > 0) {
                    let reportingManagerUsers = [];
                    let referenceProblemUsers = [];

                    response.canNotDeleteUsers.forEach(user => {
                        if (user.value === "ReportingManager") {
                            reportingManagerUsers.push(user.key);
                        } else if (user.value === "ReferenceProblem") {
                            referenceProblemUsers.push(user.key);
                        }
                    });

                    if (reportingManagerUsers.length > 0) {
                        Swal.fire({
                            icon: "warning",
                            text: `Other users are reporting to this user you are trying to delete. Users:-  ${reportingManagerUsers.join(", ")}`,
                            showConfirmButton: true,
                            timer: 15000,
                        });
                    }

                    if (referenceProblemUsers.length > 0) {
                        Swal.fire({
                            icon: "error",
                            text: `Could not delete user due to user's activity recorded in the system: ${referenceProblemUsers.join(", ")}`,
                            showConfirmButton: true,
                            timer: 15000,
                        });
                    }
                } else {
                    Swal.fire({
                        icon: "success",
                        text: "Users deleted successfully!",
                        showConfirmButton: false,
                        timer: 3000,
                    }).then(() => {
                        window.location.reload(); // Reload the page after success
                    });
                }
            },
            error: function (xhr, status, error) {
                alert("Error:", error);
            }
        });
    }

</script>